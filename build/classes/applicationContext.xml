<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- 配置 c3p0 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="root"></property>
		<property name="password" value="root"></property>
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql:///test"></property>
		
		<property name="initialPoolSize" value="5"></property>
		<property name="maxPoolSize" value="10"></property>
	</bean>
	
	<!-- 配置SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		
		<!-- 配置 数据库 的 方言 显示sql语句 格式化sql语句 数据库的生成策略 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		
		<!-- 配置映射文件 -->
		<property name="mappingLocations" value="classpath:com/ssh/model/*.hbm.xml"></property>
	</bean>
	
	<!-- 配置 Spring 的声明式事务 -->
	<!-- 1、配置hibernate 的事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 2、配置事务属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<!-- <tx:method name="list*" propagation="SUPPORTS" read-only="true"/> -->
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 3、配置事务切入点 再把事务属性和事务切入点关联起来 -->	
	<aop:config>
		<aop:pointcut expression="execution(* com.SSH.service.*.*(..))" id="txPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>
	
	<!-- 配置文件 -->
	<bean id="employeeDao" class="com.ssh.dao.EmployeeDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="departmentDao" class="com.ssh.dao.DepartmentDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="employeeService" class="com.ssh.service.EmployeeService">
		<property name="employeeDao" ref="employeeDao"></property>
	</bean>
	<bean id="departmentService" class="com.ssh.service.DepartmentService">
		<property name="departmentDao" ref="departmentDao"></property>
	</bean>
	
	<bean id="employeeAction" class="com.ssh.action.EmployeeAction" scope="prototype">
		<property name="employeeService" ref="employeeService"></property>
		<property name="departmentService" ref="departmentService"></property>
	</bean>
</beans> 
